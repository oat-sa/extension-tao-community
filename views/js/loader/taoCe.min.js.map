{"version":3,"names":["define","jQuery","$","fn","customScrollbar","options","args","_Mathmax","Math","max","defaultOptions","skin","hScroll","vScroll","updateOnWindowResize","animationSpeed","onCustomScroll","swipeSpeed","wheelSpeed","fixedThumbWidth","fixedThumbHeight","preventDefaultScroll","Scrollable","element","$element","addScrollableClass","addSkinClass","addScrollBarComponents","vScrollbar","Scrollbar","VSizing","hScrollbar","HSizing","data","initKeyboardScrolling","bindEvents","prototype","hasClass","scrollableAdded","addClass","removeScrollableClass","removeClass","skinClassAdded","removeSkinClass","assignViewPort","$viewPort","length","wrapInner","viewPortAdded","assignOverview","$overview","overviewAdded","addScrollBar","removeScrollbarComponents","removeScrollbar","unwrap","orientation","find","remove","fun","resize","keepPosition","scrollTo","scrollToElement","scrollToXY","x","y","scrollToX","scrollToY","scrollOverviewTo","scrollByX","overviewPosition","scrollByY","removeKeyboardScrolling","setAnimationSpeed","speed","isInside","wrappingElement","$wrappingElement","elementOffset","offset","wrappingElementOffset","top","left","height","width","_this","elementKeydown","event","document","activeElement","keyScroll","attr","keydown","removeAttr","unbind","on","scrollable","sizing","$scrollBar","scrollBar","$thumb","setScrollPosition","initMouseMoveScrolling","initMouseWheelScrolling","initTouchScrolling","initMouseClickScrolling","initWindowResize","overviewSize","size","calculateViewPortSize","viewPortSize","ratio","thumbSize","calculateThumbSize","maxThumbPosition","calculateMaxThumbPosition","maxOverviewPosition","calculateMaxOverviewPosition","enabled","scrollPercent","rescroll","toggle","_Mathmin","min","elementSize","maxSizeUsed","maxSize","fixedSize","fixedThumbSize","minSize","mousedown","startMouseMoveScrolling","documentMouseup","stopMouseMoveScrolling","mouseup","documentMousemove","mouseMoveScroll","mousemove","click","stopPropagation","removeMouseMoveScrolling","mousewheel","delta","deltaX","deltaY","scrolled","mouseWheelScroll","stopEventConditionally","removeMouseWheelScrolling","addEventListener","elementTouchstart","startTouchScrolling","documentTouchmove","touchScroll","elementTouchend","stopTouchScrolling","removeTouchScrolling","removeEventListener","scrollBarClick","mouseClickScroll","removeMouseClickScrolling","windowResize","window","removeWindowResize","isKeyScrolling","key","keyScrollDelta","scrollingKey","scrollingKeys","mouseMoveScrolling","setUnselectable","setScrollEvent","value","mouseDelta","scrollEvent","scrollThumbBy","touches","touchScrolling","scrollOverviewBy","wheelDelta","scrollAxis","offsetComponent","keyDown","which","thumbPosition","positionOrMax","oldScrollPercent","triggerCustomScroll","position","animate","setScrollPositionWithAnimation","p","trigger","direction","scrollDirection","css","thumbAnimationOpts","overviewAnimationOpts","pageX","pageY","overviewOffset","viewPortOffset","condition","preventDefault","$el","arg","parseInt","event1","event2","oldPercent","newPercent","each","extend","handler","orgEvent","slice","call","arguments","returnValue","fix","type","detail","axis","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","unshift","dispatch","handle","apply","types","fixHooks","i","mouseHooks","special","setup","onmousewheel","teardown","bind","unmousewheel","SplashScreen","init","isHomePage","$splashScreen","$splashWrapper","$splashDesc","$splashDiagram","redirectUrl","show","hide","$this","prepend","modal","disableClosing","initNav","initModulesNav","initCloseButton","selectedEl","selectedPanelId","parent","splashObj","not","selectedModuleName","text","selectedClass","first","class","$closeButton","e","off","prop","closeSplash","url","location","adaptHeight","$splashContentWrap","maxHeight","urlUtil","splash","$mainContainer","homeController","entrySplash","start","get","route","success","response","$splash","append","Object","assign","Home","Main","actions","index"],"sources":["../controller/home/custom-scrollbar.js","../controller/home/splash.js","../controller/home.js","../controller/help.js","../controller/routes.js","module-create.js"],"sourcesContent":["define('taoCe/controller/home/custom-scrollbar',['jquery'], function(jQuery){\n(function ($) {\n\n  $.fn.customScrollbar = function (options, args) {\n\n    var defaultOptions = {\n      skin: undefined,\n      hScroll: true,\n      vScroll: true,\n      updateOnWindowResize: false,\n      animationSpeed: 300,\n      onCustomScroll: undefined,\n      swipeSpeed: 1,\n      wheelSpeed: 40,\n      fixedThumbWidth: undefined,\n      fixedThumbHeight: undefined,\n      preventDefaultScroll: false\n    }\n\n    var Scrollable = function (element, options) {\n      this.$element = $(element);\n      this.options = options;\n      this.addScrollableClass();\n      this.addSkinClass();\n      this.addScrollBarComponents();\n      if (this.options.vScroll)\n        this.vScrollbar = new Scrollbar(this, new VSizing());\n      if (this.options.hScroll)\n        this.hScrollbar = new Scrollbar(this, new HSizing());\n      this.$element.data(\"scrollable\", this);\n      this.initKeyboardScrolling();\n      this.bindEvents();\n    }\n\n    Scrollable.prototype = {\n\n      addScrollableClass: function () {\n        if (!this.$element.hasClass(\"scrollable\")) {\n          this.scrollableAdded = true;\n          this.$element.addClass(\"scrollable\");\n        }\n      },\n\n      removeScrollableClass: function () {\n        if (this.scrollableAdded)\n          this.$element.removeClass(\"scrollable\");\n      },\n\n      addSkinClass: function () {\n        if (typeof(this.options.skin) == \"string\" && !this.$element.hasClass(this.options.skin)) {\n          this.skinClassAdded = true;\n          this.$element.addClass(this.options.skin);\n        }\n      },\n\n      removeSkinClass: function () {\n        if (this.skinClassAdded)\n          this.$element.removeClass(this.options.skin);\n      },\n\n      addScrollBarComponents: function () {\n        this.assignViewPort();\n        if (this.$viewPort.length == 0) {\n          this.$element.wrapInner(\"<div class=\\\"viewport\\\" />\");\n          this.assignViewPort();\n          this.viewPortAdded = true;\n        }\n        this.assignOverview();\n        if (this.$overview.length == 0) {\n          this.$viewPort.wrapInner(\"<div class=\\\"overview\\\" />\");\n          this.assignOverview();\n          this.overviewAdded = true;\n        }\n        this.addScrollBar(\"vertical\", \"prepend\");\n        this.addScrollBar(\"horizontal\", \"append\");\n      },\n\n      removeScrollbarComponents: function () {\n        this.removeScrollbar(\"vertical\");\n        this.removeScrollbar(\"horizontal\");\n        if (this.overviewAdded)\n          this.$element.unwrap();\n        if (this.viewPortAdded)\n          this.$element.unwrap();\n      },\n\n      removeScrollbar: function (orientation) {\n        if (this[orientation + \"ScrollbarAdded\"])\n          this.$element.find(\".scroll-bar.\" + orientation).remove();\n      },\n\n      assignViewPort: function () {\n        this.$viewPort = this.$element.find(\".viewport\");\n      },\n\n      assignOverview: function () {\n        this.$overview = this.$viewPort.find(\".overview\");\n      },\n\n      addScrollBar: function (orientation, fun) {\n        if (this.$element.find(\".scroll-bar.\" + orientation).length == 0) {\n          this.$element[fun](\"<div class='scroll-bar \" + orientation + \"'><div class='thumb'></div></div>\")\n          this[orientation + \"ScrollbarAdded\"] = true;\n        }\n      },\n\n      resize: function (keepPosition) {\n        if (this.vScrollbar)\n          this.vScrollbar.resize(keepPosition);\n        if (this.hScrollbar)\n          this.hScrollbar.resize(keepPosition);\n      },\n\n      scrollTo: function (element) {\n        if (this.vScrollbar)\n          this.vScrollbar.scrollToElement(element);\n        if (this.hScrollbar)\n          this.hScrollbar.scrollToElement(element);\n      },\n\n      scrollToXY: function (x, y) {\n        this.scrollToX(x);\n        this.scrollToY(y);\n      },\n\n      scrollToX: function (x) {\n        if (this.hScrollbar)\n          this.hScrollbar.scrollOverviewTo(x, true);\n      },\n\n      scrollToY: function (y) {\n        if (this.vScrollbar)\n          this.vScrollbar.scrollOverviewTo(y, true);\n      },\n\n      scrollByX: function (x) {\n        if (this.hScrollbar)\n          this.scrollToX(this.hScrollbar.overviewPosition() + x);\n      },\n\n      scrollByY: function (y) {\n        if (this.vScrollbar)\n          this.scrollToY(this.vScrollbar.overviewPosition() + y);\n      },\n\n      remove: function () {\n        this.removeScrollableClass();\n        this.removeSkinClass();\n        this.removeScrollbarComponents();\n        this.$element.data(\"scrollable\", null);\n        this.removeKeyboardScrolling();\n        if (this.vScrollbar)\n          this.vScrollbar.remove();\n        if (this.hScrollbar)\n          this.hScrollbar.remove();\n      },\n\n      setAnimationSpeed: function (speed) {\n        this.options.animationSpeed = speed;\n      },\n\n      isInside: function (element, wrappingElement) {\n        var $element = $(element);\n        var $wrappingElement = $(wrappingElement);\n        var elementOffset = $element.offset();\n        var wrappingElementOffset = $wrappingElement.offset();\n        return (elementOffset.top >= wrappingElementOffset.top) && (elementOffset.left >= wrappingElementOffset.left) &&\n          (elementOffset.top + $element.height() <= wrappingElementOffset.top + $wrappingElement.height()) &&\n          (elementOffset.left + $element.width() <= wrappingElementOffset.left + $wrappingElement.width())\n      },\n\n      initKeyboardScrolling: function () {\n        var _this = this;\n\n        this.elementKeydown = function (event) {\n          if (document.activeElement === _this.$element[0]) {\n            if (_this.vScrollbar)\n              _this.vScrollbar.keyScroll(event);\n            if (_this.hScrollbar)\n              _this.hScrollbar.keyScroll(event);\n          }\n        }\n\n        this.$element\n          .attr('tabindex', '-1')\n          .keydown(this.elementKeydown);\n      },\n\n      removeKeyboardScrolling: function () {\n        this.$element\n          .removeAttr('tabindex')\n          .unbind(\"keydown\", this.elementKeydown);\n      },\n\n      bindEvents: function () {\n        if (this.options.onCustomScroll)\n          this.$element.on(\"customScroll\", this.options.onCustomScroll);\n      }\n\n    }\n\n    var Scrollbar = function (scrollable, sizing) {\n      this.scrollable = scrollable;\n      this.sizing = sizing\n      this.$scrollBar = this.sizing.scrollBar(this.scrollable.$element);\n      this.$thumb = this.$scrollBar.find(\".thumb\");\n      this.setScrollPosition(0, 0);\n      this.resize();\n      this.initMouseMoveScrolling();\n      this.initMouseWheelScrolling();\n      this.initTouchScrolling();\n      this.initMouseClickScrolling();\n      this.initWindowResize();\n    }\n\n    Scrollbar.prototype = {\n\n      resize: function (keepPosition) {\n        this.overviewSize = this.sizing.size(this.scrollable.$overview);\n        this.calculateViewPortSize();\n        this.sizing.size(this.scrollable.$viewPort, this.viewPortSize);\n        this.ratio = this.viewPortSize / this.overviewSize;\n        this.sizing.size(this.$scrollBar, this.viewPortSize);\n        this.thumbSize = this.calculateThumbSize();\n        this.sizing.size(this.$thumb, this.thumbSize);\n        this.maxThumbPosition = this.calculateMaxThumbPosition();\n        this.maxOverviewPosition = this.calculateMaxOverviewPosition();\n        this.enabled = (this.overviewSize > this.viewPortSize);\n        if (this.scrollPercent === undefined)\n          this.scrollPercent = 0.0;\n        if (this.enabled)\n          this.rescroll(keepPosition);\n        else\n          this.setScrollPosition(0, 0);\n        this.$scrollBar.toggle(this.enabled);\n      },\n\n      calculateViewPortSize: function () {\n        var elementSize = this.sizing.size(this.scrollable.$element);\n        if (elementSize > 0 && !this.maxSizeUsed) {\n          this.viewPortSize = elementSize;\n          this.maxSizeUsed = false;\n        }\n        else {\n          var maxSize = this.sizing.maxSize(this.scrollable.$element);\n          this.viewPortSize = Math.min(maxSize, this.overviewSize);\n          this.maxSizeUsed = true;\n        }\n      },\n\n      calculateThumbSize: function () {\n        var fixedSize = this.sizing.fixedThumbSize(this.scrollable.options)\n        var size;\n        if (fixedSize)\n          size = fixedSize;\n        else\n          size = this.ratio * this.viewPortSize\n        return Math.max(size, this.sizing.minSize(this.$thumb));\n      },\n\n      initMouseMoveScrolling: function () {\n        var _this = this;\n        this.$thumb.mousedown(function (event) {\n          if (_this.enabled)\n            _this.startMouseMoveScrolling(event);\n        });\n        this.documentMouseup = function (event) {\n          _this.stopMouseMoveScrolling(event);\n        };\n        $(document).mouseup(this.documentMouseup);\n        this.documentMousemove = function (event) {\n          _this.mouseMoveScroll(event);\n        };\n        $(document).mousemove(this.documentMousemove);\n        this.$thumb.click(function (event) {\n          event.stopPropagation();\n        });\n      },\n\n      removeMouseMoveScrolling: function () {\n        this.$thumb.unbind();\n        $(document).unbind(\"mouseup\", this.documentMouseup);\n        $(document).unbind(\"mousemove\", this.documentMousemove);\n      },\n\n      initMouseWheelScrolling: function () {\n        var _this = this;\n        this.scrollable.$element.mousewheel(function (event, delta, deltaX, deltaY) {\n          if (_this.enabled) {\n            var scrolled = _this.mouseWheelScroll(deltaX, deltaY);\n            _this.stopEventConditionally(event, scrolled);\n          }\n        });\n      },\n\n      removeMouseWheelScrolling: function () {\n        this.scrollable.$element.unbind(\"mousewheel\");\n      },\n\n      initTouchScrolling: function () {\n        if (document.addEventListener) {\n          var _this = this;\n          this.elementTouchstart = function (event) {\n            if (_this.enabled)\n              _this.startTouchScrolling(event);\n          }\n          this.scrollable.$element[0].addEventListener(\"touchstart\", this.elementTouchstart);\n          this.documentTouchmove = function (event) {\n            _this.touchScroll(event);\n          }\n          document.addEventListener(\"touchmove\", this.documentTouchmove);\n          this.elementTouchend = function (event) {\n            _this.stopTouchScrolling(event);\n          }\n          this.scrollable.$element[0].addEventListener(\"touchend\", this.elementTouchend);\n        }\n      },\n\n      removeTouchScrolling: function () {\n        if (document.addEventListener) {\n          this.scrollable.$element[0].removeEventListener(\"touchstart\", this.elementTouchstart);\n          document.removeEventListener(\"touchmove\", this.documentTouchmove);\n          this.scrollable.$element[0].removeEventListener(\"touchend\", this.elementTouchend);\n        }\n      },\n\n      initMouseClickScrolling: function () {\n        var _this = this;\n        this.scrollBarClick = function (event) {\n          _this.mouseClickScroll(event);\n        };\n        this.$scrollBar.click(this.scrollBarClick);\n      },\n\n      removeMouseClickScrolling: function () {\n        this.$scrollBar.unbind(\"click\", this.scrollBarClick);\n      },\n\n      initWindowResize: function () {\n        if (this.scrollable.options.updateOnWindowResize) {\n          var _this = this;\n          this.windowResize = function () {\n            _this.resize();\n          };\n          $(window).resize(this.windowResize);\n        }\n      },\n\n      removeWindowResize: function () {\n        $(window).unbind(\"resize\", this.windowResize);\n      },\n\n      isKeyScrolling: function (key) {\n        return this.keyScrollDelta(key) != null;\n      },\n\n      keyScrollDelta: function (key) {\n        for (var scrollingKey in this.sizing.scrollingKeys)\n          if (scrollingKey == key)\n            return this.sizing.scrollingKeys[key](this.viewPortSize);\n        return null;\n      },\n\n      startMouseMoveScrolling: function (event) {\n        this.mouseMoveScrolling = true;\n        $(\"html\").addClass(\"not-selectable\");\n        this.setUnselectable($(\"html\"), \"on\");\n        this.setScrollEvent(event);\n      },\n\n      stopMouseMoveScrolling: function (event) {\n        this.mouseMoveScrolling = false;\n        $(\"html\").removeClass(\"not-selectable\");\n        this.setUnselectable($(\"html\"), null);\n      },\n\n      setUnselectable: function (element, value) {\n        if (element.attr(\"unselectable\") != value) {\n          element.attr(\"unselectable\", value);\n          element.find(':not(input)').attr('unselectable', value);\n        }\n      },\n\n      mouseMoveScroll: function (event) {\n        if (this.mouseMoveScrolling) {\n          var delta = this.sizing.mouseDelta(this.scrollEvent, event);\n          this.scrollThumbBy(delta);\n          this.setScrollEvent(event);\n        }\n      },\n\n      startTouchScrolling: function (event) {\n        if (event.touches && event.touches.length == 1) {\n          this.setScrollEvent(event.touches[0]);\n          this.touchScrolling = true;\n          event.stopPropagation();\n        }\n      },\n\n      touchScroll: function (event) {\n        if (this.touchScrolling && event.touches && event.touches.length == 1) {\n          var delta = -this.sizing.mouseDelta(this.scrollEvent, event.touches[0]) * this.scrollable.options.swipeSpeed;\n          var scrolled = this.scrollOverviewBy(delta);\n          if (scrolled)\n            this.setScrollEvent(event.touches[0]);\n          this.stopEventConditionally(event, scrolled);\n        }\n      },\n\n      stopTouchScrolling: function (event) {\n        this.touchScrolling = false;\n        event.stopPropagation();\n      },\n\n      mouseWheelScroll: function (deltaX, deltaY) {\n        var delta = -this.sizing.wheelDelta(deltaX, deltaY) * this.scrollable.options.wheelSpeed;\n        if (delta != 0)\n          return this.scrollOverviewBy(delta);\n      },\n\n      mouseClickScroll: function (event) {\n        var delta = this.viewPortSize - 20;\n        if (event[\"page\" + this.sizing.scrollAxis()] < this.$thumb.offset()[this.sizing.offsetComponent()])\n        // mouse click over thumb\n          delta = -delta;\n        this.scrollOverviewBy(delta);\n      },\n\n      keyScroll: function (event) {\n        var keyDown = event.which;\n        if (this.enabled && this.isKeyScrolling(keyDown)) {\n          var scrolled = this.scrollOverviewBy(this.keyScrollDelta(keyDown));\n          this.stopEventConditionally(event, scrolled);\n        }\n      },\n\n      scrollThumbBy: function (delta) {\n        var thumbPosition = this.thumbPosition();\n        thumbPosition += delta;\n        thumbPosition = this.positionOrMax(thumbPosition, this.maxThumbPosition);\n        var oldScrollPercent = this.scrollPercent;\n        this.scrollPercent = thumbPosition / this.maxThumbPosition;\n        if (oldScrollPercent != this.scrollPercent) {\n          var overviewPosition = (thumbPosition * this.maxOverviewPosition) / this.maxThumbPosition;\n          this.setScrollPosition(overviewPosition, thumbPosition);\n          this.triggerCustomScroll(oldScrollPercent);\n          return true\n        }\n        else\n          return false;\n      },\n\n      thumbPosition: function () {\n        return this.$thumb.position()[this.sizing.offsetComponent()];\n      },\n\n      scrollOverviewBy: function (delta) {\n        var overviewPosition = this.overviewPosition() + delta;\n        return this.scrollOverviewTo(overviewPosition, false);\n      },\n\n      overviewPosition: function () {\n        return -this.scrollable.$overview.position()[this.sizing.offsetComponent()];\n      },\n\n      scrollOverviewTo: function (overviewPosition, animate) {\n        overviewPosition = this.positionOrMax(overviewPosition, this.maxOverviewPosition);\n        var oldScrollPercent = this.scrollPercent;\n        this.scrollPercent = overviewPosition / this.maxOverviewPosition;\n        if (oldScrollPercent != this.scrollPercent) {\n          var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n          if (animate)\n            this.setScrollPositionWithAnimation(overviewPosition, thumbPosition);\n          else\n            this.setScrollPosition(overviewPosition, thumbPosition);\n          this.triggerCustomScroll(oldScrollPercent);\n          return true;\n        }\n        else\n          return false;\n      },\n\n      positionOrMax: function (p, max) {\n        if (p < 0)\n          return 0;\n        else if (p > max)\n          return max;\n        else\n          return p;\n      },\n\n      triggerCustomScroll: function (oldScrollPercent) {\n        this.scrollable.$element.trigger(\"customScroll\", {\n            scrollAxis: this.sizing.scrollAxis(),\n            direction: this.sizing.scrollDirection(oldScrollPercent, this.scrollPercent),\n            scrollPercent: this.scrollPercent * 100\n          }\n        );\n      },\n\n      rescroll: function (keepPosition) {\n        if (keepPosition) {\n          var overviewPosition = this.positionOrMax(this.overviewPosition(), this.maxOverviewPosition);\n          this.scrollPercent = overviewPosition / this.maxOverviewPosition;\n          var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n          this.setScrollPosition(overviewPosition, thumbPosition);\n        }\n        else {\n          var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n          var overviewPosition = this.scrollPercent * this.maxOverviewPosition;\n          this.setScrollPosition(overviewPosition, thumbPosition);\n        }\n      },\n\n      setScrollPosition: function (overviewPosition, thumbPosition) {\n        this.$thumb.css(this.sizing.offsetComponent(), thumbPosition + \"px\");\n        this.scrollable.$overview.css(this.sizing.offsetComponent(), -overviewPosition + \"px\");\n      },\n\n      setScrollPositionWithAnimation: function (overviewPosition, thumbPosition) {\n        var thumbAnimationOpts = {};\n        var overviewAnimationOpts = {};\n        thumbAnimationOpts[this.sizing.offsetComponent()] = thumbPosition + \"px\";\n        this.$thumb.animate(thumbAnimationOpts, this.scrollable.options.animationSpeed);\n        overviewAnimationOpts[this.sizing.offsetComponent()] = -overviewPosition + \"px\";\n        this.scrollable.$overview.animate(overviewAnimationOpts, this.scrollable.options.animationSpeed);\n      },\n\n      calculateMaxThumbPosition: function () {\n        return Math.max(0, this.sizing.size(this.$scrollBar) - this.thumbSize);\n      },\n\n      calculateMaxOverviewPosition: function () {\n        return Math.max(0, this.sizing.size(this.scrollable.$overview) - this.sizing.size(this.scrollable.$viewPort));\n      },\n\n      setScrollEvent: function (event) {\n        var attr = \"page\" + this.sizing.scrollAxis();\n        if (!this.scrollEvent || this.scrollEvent[attr] != event[attr])\n          this.scrollEvent = {pageX: event.pageX, pageY: event.pageY};\n      },\n\n      scrollToElement: function (element) {\n        var $element = $(element);\n        if (this.sizing.isInside($element, this.scrollable.$overview) && !this.sizing.isInside($element, this.scrollable.$viewPort)) {\n          var elementOffset = $element.offset();\n          var overviewOffset = this.scrollable.$overview.offset();\n          var viewPortOffset = this.scrollable.$viewPort.offset();\n          this.scrollOverviewTo(elementOffset[this.sizing.offsetComponent()] - overviewOffset[this.sizing.offsetComponent()], true);\n        }\n      },\n\n      remove: function () {\n        this.removeMouseMoveScrolling();\n        this.removeMouseWheelScrolling();\n        this.removeTouchScrolling();\n        this.removeMouseClickScrolling();\n        this.removeWindowResize();\n      },\n\n      stopEventConditionally: function (event, condition) {\n        if (condition || this.scrollable.options.preventDefaultScroll) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n\n    }\n\n    var HSizing = function () {\n    }\n\n    HSizing.prototype = {\n      size: function ($el, arg) {\n        if (arg)\n          return $el.width(arg);\n        else\n          return $el.width();\n      },\n\n      minSize: function ($el) {\n        return parseInt($el.css(\"min-width\")) || 0;\n      },\n\n      maxSize: function ($el) {\n        return parseInt($el.css(\"max-width\")) || 0;\n      },\n\n      fixedThumbSize: function (options) {\n        return options.fixedThumbWidth;\n      },\n\n      scrollBar: function ($el) {\n        return $el.find(\".scroll-bar.horizontal\");\n      },\n\n      mouseDelta: function (event1, event2) {\n        return event2.pageX - event1.pageX;\n      },\n\n      offsetComponent: function () {\n        return \"left\";\n      },\n\n      wheelDelta: function (deltaX, deltaY) {\n        return deltaX;\n      },\n\n      scrollAxis: function () {\n        return \"X\";\n      },\n\n      scrollDirection: function (oldPercent, newPercent) {\n        return oldPercent < newPercent ? \"right\" : \"left\";\n      },\n\n      scrollingKeys: {\n        37: function (viewPortSize) {\n          return -10; //arrow left\n        },\n        39: function (viewPortSize) {\n          return 10; //arrow right\n        }\n      },\n\n      isInside: function (element, wrappingElement) {\n        var $element = $(element);\n        var $wrappingElement = $(wrappingElement);\n        var elementOffset = $element.offset();\n        var wrappingElementOffset = $wrappingElement.offset();\n        return (elementOffset.left >= wrappingElementOffset.left) &&\n          (elementOffset.left + $element.width() <= wrappingElementOffset.left + $wrappingElement.width());\n      }\n\n    }\n\n    var VSizing = function () {\n    }\n\n    VSizing.prototype = {\n\n      size: function ($el, arg) {\n        if (arg)\n          return $el.height(arg);\n        else\n          return $el.height();\n      },\n\n      minSize: function ($el) {\n        return parseInt($el.css(\"min-height\")) || 0;\n      },\n\n      maxSize: function ($el) {\n        return parseInt($el.css(\"max-height\")) || 0;\n      },\n\n      fixedThumbSize: function (options) {\n        return options.fixedThumbHeight;\n      },\n\n      scrollBar: function ($el) {\n        return $el.find(\".scroll-bar.vertical\");\n      },\n\n      mouseDelta: function (event1, event2) {\n        return event2.pageY - event1.pageY;\n      },\n\n      offsetComponent: function () {\n        return \"top\";\n      },\n\n      wheelDelta: function (deltaX, deltaY) {\n        return deltaY;\n      },\n\n      scrollAxis: function () {\n        return \"Y\";\n      },\n\n      scrollDirection: function (oldPercent, newPercent) {\n        return oldPercent < newPercent ? \"down\" : \"up\";\n      },\n\n      scrollingKeys: {\n        38: function (viewPortSize) {\n          return -10; //arrow up\n        },\n        40: function (viewPortSize) {\n          return 10; //arrow down\n        },\n        33: function (viewPortSize) {\n          return -(viewPortSize - 20); //page up\n        },\n        34: function (viewPortSize) {\n          return viewPortSize - 20; //page down\n        }\n      },\n\n      isInside: function (element, wrappingElement) {\n        var $element = $(element);\n        var $wrappingElement = $(wrappingElement);\n        var elementOffset = $element.offset();\n        var wrappingElementOffset = $wrappingElement.offset();\n        return (elementOffset.top >= wrappingElementOffset.top) &&\n          (elementOffset.top + $element.height() <= wrappingElementOffset.top + $wrappingElement.height());\n      }\n\n    }\n\n    return this.each(function () {\n      if (options == undefined)\n        options = defaultOptions;\n      if (typeof(options) == \"string\") {\n        var scrollable = $(this).data(\"scrollable\");\n        if (scrollable)\n          scrollable[options](args);\n      }\n      else if (typeof(options) == \"object\") {\n        options = $.extend(defaultOptions, options);\n        new Scrollable($(this), options);\n      }\n      else\n        throw \"Invalid type of options\";\n    });\n\n  }\n  ;\n\n})\n  (jQuery);\n\n(function ($) {\n\n  var types = ['DOMMouseScroll', 'mousewheel'];\n\n  if ($.event.fixHooks) {\n    for (var i = types.length; i;) {\n      $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;\n    }\n  }\n\n  $.event.special.mousewheel = {\n    setup: function () {\n      if (this.addEventListener) {\n        for (var i = types.length; i;) {\n          this.addEventListener(types[--i], handler, false);\n        }\n      } else {\n        this.onmousewheel = handler;\n      }\n    },\n\n    teardown: function () {\n      if (this.removeEventListener) {\n        for (var i = types.length; i;) {\n          this.removeEventListener(types[--i], handler, false);\n        }\n      } else {\n        this.onmousewheel = null;\n      }\n    }\n  };\n\n  $.fn.extend({\n    mousewheel: function (fn) {\n      return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n\n    unmousewheel: function (fn) {\n      return this.unbind(\"mousewheel\", fn);\n    }\n  });\n\n\n  function handler(event) {\n    var orgEvent = event || window.event, args = [].slice.call(arguments, 1), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;\n    event = $.event.fix(orgEvent);\n    event.type = \"mousewheel\";\n\n    // Old school scrollwheel delta\n    if (orgEvent.wheelDelta) {\n      delta = orgEvent.wheelDelta / 120;\n    }\n    if (orgEvent.detail) {\n      delta = -orgEvent.detail / 3;\n    }\n\n    // New school multidimensional scroll (touchpads) deltas\n    deltaY = delta;\n\n    // Gecko\n    if (orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {\n      deltaY = 0;\n      deltaX = delta;\n    }\n\n    // Webkit\n    if (orgEvent.wheelDeltaY !== undefined) {\n      deltaY = orgEvent.wheelDeltaY / 120;\n    }\n    if (orgEvent.wheelDeltaX !== undefined) {\n      deltaX = orgEvent.wheelDeltaX / 120;\n    }\n\n    // Add event and delta to the front of the arguments\n    args.unshift(event, delta, deltaX, deltaY);\n\n    return ($.event.dispatch || $.event.handle).apply(this, args);\n  }\n\n})(jQuery);\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *\n *\n */\ndefine('taoCe/controller/home/splash',['jquery', 'taoCe/controller/home/custom-scrollbar'], function ($) {\n    'use strict';\n\n\n    /**\n     * The SplashScreen creates a modal popup that contains a  dynamic diagram of the TAO's workflow.\n     * It relies on content that should be there on a .splash-screen-wrapper element. (This content is loaded from the\n     * server by {@link module:taoCe/controller/home}\n     *\n     * @exports taoCe/controller/home/splash\n     */\n    var SplashScreen = {\n\n        /**\n         * Initialize the splash screen\n         * @param {Boolean} [isHomePage = false] - less options if not used as an entry splash\n         */\n        init: function (isHomePage) {\n\n            //console.log(this)\n            this.$splashScreen = $('#splash-screen');\n            var $splashWrapper = $('.splash-screen-wrapper');\n            var $splashDesc = $('.desc', this.$splashScreen);\n            var $splashDiagram = $('.diagram', this.$splashScreen);\n\n            //Url to redirect after closing\n            this.redirectUrl = '';\n\n            //overwrites main styles\n            $splashWrapper.css('display', 'block');\n\n            if (!isHomePage) {\n                $('.modal-footer', this.$splashScreen).hide();\n            }\n            else {\n                $('.modal-footer', this.$splashScreen).show();\n            }\n\n            /**\n             * Place lock icon for disabled modules\n             */\n            $('[data-module-name]', $splashDiagram).each(function () {\n                var $this = $(this);\n\n                if ($this.hasClass('disabled')) {\n\n\n                    $this.find('span').remove();\n                    $this.prepend('<span class=\"icon-lock\"></span>');\n                }\n            });\n\n            /**\n             * Initialize custom scrollbar for the description\n             */\n            $splashDesc.customScrollbar({\n                updateOnWindowResize: true,\n                skin: 'gray-skin',\n                hScroll: false\n            });\n\n            /**\n             * Open modal window immediately\n             */\n            this.$splashScreen.modal({disableClosing: isHomePage});\n\n            this.initNav();\n            this.initModulesNav();\n            this.initCloseButton();\n            //this.adaptHeight();\n        },\n\n        /**\n         * Initialize a listener for the navigation tab buttons\n         */\n        initNav: function () {\n            $('.modal-nav a', this.$splashScreen).on('click', function () {\n                var selectedEl = $(this),\n                    selectedPanelId = selectedEl.data('panel');\n\n                $('.modal-nav li').removeClass('active');\n                $(\"a[data-panel='\" + selectedPanelId + \"']\").parent().addClass('active');\n\n                $('.panels').hide();\n                $(\"div[data-panel-id='\" + selectedPanelId + \"']\").show();\n            });\n        },\n\n        /**\n         * Initialize a listener for the modules buttons\n         */\n        initModulesNav: function () {\n            var splashObj = this;\n\n            $('[data-module-name]', this.$splashScreen).not('.disabled').on('click', function () {\n                var selectedEl = $(this),\n                    selectedModuleName = selectedEl.data('module-name');\n                splashObj.redirectUrl = selectedEl.data('url');\n\n                $('#splash-close-btn').removeAttr('disabled').find('.module-name').text(selectedEl.text());\n\n                if (!selectedEl.hasClass('new-module')) {\n                    var selectedClass = selectedEl.hasClass('groups') ?\n                        $('.test-takers').find('span').first().attr('class') :\n                        selectedEl.find('span').first().attr('class');\n                    $('.module-desc>span').attr({'class': selectedClass});\n                }\n                else {\n                    $('.module-desc>span').attr({'class': ''});\n                }\n\n                $('[data-module-name]').removeClass('active');\n                $('.module-desc').hide();\n\n                selectedEl.addClass('active');\n                $(\"div[data-module='\" + selectedModuleName + \"']\").show();\n\n                $('.desc').customScrollbar('resize', true);\n            });\n        },\n\n        /**\n         * Initialize a listener for the close button\n         */\n        initCloseButton: function () {\n            var splashObj = this;\n            var $closeButton = $('#splash-close-btn');\n\n            //trigger the close by keypress enter\n            $(document).on('keypress', function (e) {\n                if (e.which === 13) {\n                    $closeButton.trigger('click');\n                }\n            });\n\n            //clean unbind\n            this.$splashScreen.on('closed.modal', function () {\n                $(document).off('keypress');\n            });\n\n            $closeButton.on('click', function (e) {\n                e.preventDefault();\n\n                //if the checkbox is checked, then add and set the additional GET parameter 'nosplash'\n                if ($('#nosplash').prop('checked')) {\n                    splashObj.redirectUrl += '&nosplash=true';\n                }\n\n                splashObj.closeSplash(splashObj.redirectUrl);\n            });\n        },\n\n        /**\n         * Close the splash screen and redirect to selected module\n         * @param {string} url\n         */\n        closeSplash: function (url) {\n            window.location = url;\n        },\n\n        /**\n         * limit height of splash to make sure all buttons can be accessed on smaller screens\n         */\n        adaptHeight: function() {\n            //console.log(this)\n            var splashObj = this,\n                $splashContentWrap = splashObj.find('.splash-content-wrap'),\n                // 40 to have some nice margin below\n                maxHeight = $(window).height() - splashObj.find('.modal-title').offset().top - 40;\n            $splashContentWrap.css({ maxHeight: maxHeight });\n        }\n\n    };\n\n    return SplashScreen;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *\n *\n */\ndefine('taoCe/controller/home',[\n    'jquery',\n    'util/url',\n    'taoCe/controller/home/splash'\n], function($, urlUtil, splash) {\n    'use strict';\n\n    const $mainContainer = $('body');\n\n    /**\n     * The homeController set up the splash screen.\n     *\n     * @exports taoCe/controller/home\n     */\n    const homeController = {\n\n\n        entrySplash : true,\n\n        /**\n         * Setup the splash screen: loads it's content and initialize the component.\n         */\n        start: function start() {\n\n            //the splash content is loaded only once.\n            if ($('#splash-screen', $mainContainer).length === 0) {\n\n                $.get(urlUtil.route('splash', 'Home', 'taoCe'))\n                    .success( response => {\n                        const $splash = $(response);\n                        $splash.css('display', 'none');\n\n                        $mainContainer.append($splash);\n\n                        splash.init(this.entrySplash);\n                    });\n            } else {\n                splash.init(this.entrySplash);\n            }\n        }\n    };\n\n    return homeController;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *\n *\n */\ndefine('taoCe/controller/help',[\n    'taoCe/controller/home'\n], function(homeController){\n    'use strict';\n\n    return Object.assign({ entrySplash : false }, homeController);\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoCe/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Home' : {\n            'css' : 'home.css'\n        },\n        'Main':{\n            'actions': {\n                'index' : 'controller/home'\n            }\n        }\n    };\n});\n","\ndefine(\"taoCe/loader/taoCe.bundle\", function(){});\n"],"mappings":"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"}